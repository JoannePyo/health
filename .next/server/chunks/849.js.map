{"version":3,"file":"849.js","mappings":"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","sources":["webpack://carepulse/./node_modules/@radix-ui/react-dialog/node_modules/@radix-ui/primitive/dist/index.mjs","webpack://carepulse/./node_modules/@radix-ui/react-dialog/node_modules/@radix-ui/react-compose-refs/dist/index.mjs","webpack://carepulse/./node_modules/@radix-ui/react-dialog/node_modules/@radix-ui/react-context/dist/index.mjs","webpack://carepulse/./node_modules/@radix-ui/react-dialog/node_modules/@radix-ui/react-use-layout-effect/dist/index.mjs","webpack://carepulse/./node_modules/@radix-ui/react-dialog/node_modules/@radix-ui/react-id/dist/index.mjs","webpack://carepulse/./node_modules/@radix-ui/react-dialog/node_modules/@radix-ui/react-use-callback-ref/dist/index.mjs","webpack://carepulse/./node_modules/@radix-ui/react-dialog/node_modules/@radix-ui/react-use-controllable-state/dist/index.mjs","webpack://carepulse/./node_modules/@radix-ui/react-dialog/node_modules/@radix-ui/react-slot/dist/index.mjs","webpack://carepulse/./node_modules/@radix-ui/react-dialog/node_modules/@radix-ui/react-primitive/dist/index.mjs","webpack://carepulse/./node_modules/@radix-ui/react-dialog/node_modules/@radix-ui/react-use-escape-keydown/dist/index.mjs","webpack://carepulse/../src/DismissableLayer.tsx","webpack://carepulse/../src/FocusScope.tsx","webpack://carepulse/../src/Portal.tsx","webpack://carepulse/../src/Presence.tsx","webpack://carepulse/../src/useStateMachine.tsx","webpack://carepulse/../src/FocusGuards.tsx","webpack://carepulse/./node_modules/@radix-ui/react-dialog/node_modules/react-remove-scroll/dist/es2015/medium.js","webpack://carepulse/./node_modules/@radix-ui/react-dialog/node_modules/react-remove-scroll/dist/es2015/UI.js","webpack://carepulse/./node_modules/@radix-ui/react-dialog/node_modules/react-remove-scroll/dist/es2015/aggresiveCapture.js","webpack://carepulse/./node_modules/@radix-ui/react-dialog/node_modules/react-remove-scroll/dist/es2015/handleScroll.js","webpack://carepulse/./node_modules/@radix-ui/react-dialog/node_modules/react-remove-scroll/dist/es2015/SideEffect.js","webpack://carepulse/./node_modules/@radix-ui/react-dialog/node_modules/react-remove-scroll/dist/es2015/sidecar.js","webpack://carepulse/./node_modules/@radix-ui/react-dialog/node_modules/react-remove-scroll/dist/es2015/Combination.js","webpack://carepulse/../src/Dialog.tsx"],"sourcesContent":["// packages/core/primitive/src/primitive.tsx\nfunction composeEventHandlers(originalEventHandler, ourEventHandler, { checkForDefaultPrevented = true } = {}) {\n  return function handleEvent(event) {\n    originalEventHandler?.(event);\n    if (checkForDefaultPrevented === false || !event.defaultPrevented) {\n      return ourEventHandler?.(event);\n    }\n  };\n}\nexport {\n  composeEventHandlers\n};\n//# sourceMappingURL=index.mjs.map\n","// packages/react/compose-refs/src/composeRefs.tsx\nimport * as React from \"react\";\nfunction setRef(ref, value) {\n  if (typeof ref === \"function\") {\n    ref(value);\n  } else if (ref !== null && ref !== void 0) {\n    ref.current = value;\n  }\n}\nfunction composeRefs(...refs) {\n  return (node) => refs.forEach((ref) => setRef(ref, node));\n}\nfunction useComposedRefs(...refs) {\n  return React.useCallback(composeRefs(...refs), refs);\n}\nexport {\n  composeRefs,\n  useComposedRefs\n};\n//# sourceMappingURL=index.mjs.map\n","// packages/react/context/src/createContext.tsx\nimport * as React from \"react\";\nimport { jsx } from \"react/jsx-runtime\";\nfunction createContext2(rootComponentName, defaultContext) {\n  const Context = React.createContext(defaultContext);\n  function Provider(props) {\n    const { children, ...context } = props;\n    const value = React.useMemo(() => context, Object.values(context));\n    return /* @__PURE__ */ jsx(Context.Provider, { value, children });\n  }\n  function useContext2(consumerName) {\n    const context = React.useContext(Context);\n    if (context) return context;\n    if (defaultContext !== void 0) return defaultContext;\n    throw new Error(`\\`${consumerName}\\` must be used within \\`${rootComponentName}\\``);\n  }\n  Provider.displayName = rootComponentName + \"Provider\";\n  return [Provider, useContext2];\n}\nfunction createContextScope(scopeName, createContextScopeDeps = []) {\n  let defaultContexts = [];\n  function createContext3(rootComponentName, defaultContext) {\n    const BaseContext = React.createContext(defaultContext);\n    const index = defaultContexts.length;\n    defaultContexts = [...defaultContexts, defaultContext];\n    function Provider(props) {\n      const { scope, children, ...context } = props;\n      const Context = scope?.[scopeName][index] || BaseContext;\n      const value = React.useMemo(() => context, Object.values(context));\n      return /* @__PURE__ */ jsx(Context.Provider, { value, children });\n    }\n    function useContext2(consumerName, scope) {\n      const Context = scope?.[scopeName][index] || BaseContext;\n      const context = React.useContext(Context);\n      if (context) return context;\n      if (defaultContext !== void 0) return defaultContext;\n      throw new Error(`\\`${consumerName}\\` must be used within \\`${rootComponentName}\\``);\n    }\n    Provider.displayName = rootComponentName + \"Provider\";\n    return [Provider, useContext2];\n  }\n  const createScope = () => {\n    const scopeContexts = defaultContexts.map((defaultContext) => {\n      return React.createContext(defaultContext);\n    });\n    return function useScope(scope) {\n      const contexts = scope?.[scopeName] || scopeContexts;\n      return React.useMemo(\n        () => ({ [`__scope${scopeName}`]: { ...scope, [scopeName]: contexts } }),\n        [scope, contexts]\n      );\n    };\n  };\n  createScope.scopeName = scopeName;\n  return [createContext3, composeContextScopes(createScope, ...createContextScopeDeps)];\n}\nfunction composeContextScopes(...scopes) {\n  const baseScope = scopes[0];\n  if (scopes.length === 1) return baseScope;\n  const createScope = () => {\n    const scopeHooks = scopes.map((createScope2) => ({\n      useScope: createScope2(),\n      scopeName: createScope2.scopeName\n    }));\n    return function useComposedScopes(overrideScopes) {\n      const nextScopes = scopeHooks.reduce((nextScopes2, { useScope, scopeName }) => {\n        const scopeProps = useScope(overrideScopes);\n        const currentScope = scopeProps[`__scope${scopeName}`];\n        return { ...nextScopes2, ...currentScope };\n      }, {});\n      return React.useMemo(() => ({ [`__scope${baseScope.scopeName}`]: nextScopes }), [nextScopes]);\n    };\n  };\n  createScope.scopeName = baseScope.scopeName;\n  return createScope;\n}\nexport {\n  createContext2 as createContext,\n  createContextScope\n};\n//# sourceMappingURL=index.mjs.map\n","// packages/react/use-layout-effect/src/useLayoutEffect.tsx\nimport * as React from \"react\";\nvar useLayoutEffect2 = Boolean(globalThis?.document) ? React.useLayoutEffect : () => {\n};\nexport {\n  useLayoutEffect2 as useLayoutEffect\n};\n//# sourceMappingURL=index.mjs.map\n","// packages/react/id/src/id.tsx\nimport * as React from \"react\";\nimport { useLayoutEffect } from \"@radix-ui/react-use-layout-effect\";\nvar useReactId = React[\"useId\".toString()] || (() => void 0);\nvar count = 0;\nfunction useId(deterministicId) {\n  const [id, setId] = React.useState(useReactId());\n  useLayoutEffect(() => {\n    if (!deterministicId) setId((reactId) => reactId ?? String(count++));\n  }, [deterministicId]);\n  return deterministicId || (id ? `radix-${id}` : \"\");\n}\nexport {\n  useId\n};\n//# sourceMappingURL=index.mjs.map\n","// packages/react/use-callback-ref/src/useCallbackRef.tsx\nimport * as React from \"react\";\nfunction useCallbackRef(callback) {\n  const callbackRef = React.useRef(callback);\n  React.useEffect(() => {\n    callbackRef.current = callback;\n  });\n  return React.useMemo(() => (...args) => callbackRef.current?.(...args), []);\n}\nexport {\n  useCallbackRef\n};\n//# sourceMappingURL=index.mjs.map\n","// packages/react/use-controllable-state/src/useControllableState.tsx\nimport * as React from \"react\";\nimport { useCallbackRef } from \"@radix-ui/react-use-callback-ref\";\nfunction useControllableState({\n  prop,\n  defaultProp,\n  onChange = () => {\n  }\n}) {\n  const [uncontrolledProp, setUncontrolledProp] = useUncontrolledState({ defaultProp, onChange });\n  const isControlled = prop !== void 0;\n  const value = isControlled ? prop : uncontrolledProp;\n  const handleChange = useCallbackRef(onChange);\n  const setValue = React.useCallback(\n    (nextValue) => {\n      if (isControlled) {\n        const setter = nextValue;\n        const value2 = typeof nextValue === \"function\" ? setter(prop) : nextValue;\n        if (value2 !== prop) handleChange(value2);\n      } else {\n        setUncontrolledProp(nextValue);\n      }\n    },\n    [isControlled, prop, setUncontrolledProp, handleChange]\n  );\n  return [value, setValue];\n}\nfunction useUncontrolledState({\n  defaultProp,\n  onChange\n}) {\n  const uncontrolledState = React.useState(defaultProp);\n  const [value] = uncontrolledState;\n  const prevValueRef = React.useRef(value);\n  const handleChange = useCallbackRef(onChange);\n  React.useEffect(() => {\n    if (prevValueRef.current !== value) {\n      handleChange(value);\n      prevValueRef.current = value;\n    }\n  }, [value, prevValueRef, handleChange]);\n  return uncontrolledState;\n}\nexport {\n  useControllableState\n};\n//# sourceMappingURL=index.mjs.map\n","// packages/react/slot/src/Slot.tsx\nimport * as React from \"react\";\nimport { composeRefs } from \"@radix-ui/react-compose-refs\";\nimport { Fragment, jsx } from \"react/jsx-runtime\";\nvar Slot = React.forwardRef((props, forwardedRef) => {\n  const { children, ...slotProps } = props;\n  const childrenArray = React.Children.toArray(children);\n  const slottable = childrenArray.find(isSlottable);\n  if (slottable) {\n    const newElement = slottable.props.children;\n    const newChildren = childrenArray.map((child) => {\n      if (child === slottable) {\n        if (React.Children.count(newElement) > 1) return React.Children.only(null);\n        return React.isValidElement(newElement) ? newElement.props.children : null;\n      } else {\n        return child;\n      }\n    });\n    return /* @__PURE__ */ jsx(SlotClone, { ...slotProps, ref: forwardedRef, children: React.isValidElement(newElement) ? React.cloneElement(newElement, void 0, newChildren) : null });\n  }\n  return /* @__PURE__ */ jsx(SlotClone, { ...slotProps, ref: forwardedRef, children });\n});\nSlot.displayName = \"Slot\";\nvar SlotClone = React.forwardRef((props, forwardedRef) => {\n  const { children, ...slotProps } = props;\n  if (React.isValidElement(children)) {\n    const childrenRef = getElementRef(children);\n    return React.cloneElement(children, {\n      ...mergeProps(slotProps, children.props),\n      // @ts-ignore\n      ref: forwardedRef ? composeRefs(forwardedRef, childrenRef) : childrenRef\n    });\n  }\n  return React.Children.count(children) > 1 ? React.Children.only(null) : null;\n});\nSlotClone.displayName = \"SlotClone\";\nvar Slottable = ({ children }) => {\n  return /* @__PURE__ */ jsx(Fragment, { children });\n};\nfunction isSlottable(child) {\n  return React.isValidElement(child) && child.type === Slottable;\n}\nfunction mergeProps(slotProps, childProps) {\n  const overrideProps = { ...childProps };\n  for (const propName in childProps) {\n    const slotPropValue = slotProps[propName];\n    const childPropValue = childProps[propName];\n    const isHandler = /^on[A-Z]/.test(propName);\n    if (isHandler) {\n      if (slotPropValue && childPropValue) {\n        overrideProps[propName] = (...args) => {\n          childPropValue(...args);\n          slotPropValue(...args);\n        };\n      } else if (slotPropValue) {\n        overrideProps[propName] = slotPropValue;\n      }\n    } else if (propName === \"style\") {\n      overrideProps[propName] = { ...slotPropValue, ...childPropValue };\n    } else if (propName === \"className\") {\n      overrideProps[propName] = [slotPropValue, childPropValue].filter(Boolean).join(\" \");\n    }\n  }\n  return { ...slotProps, ...overrideProps };\n}\nfunction getElementRef(element) {\n  let getter = Object.getOwnPropertyDescriptor(element.props, \"ref\")?.get;\n  let mayWarn = getter && \"isReactWarning\" in getter && getter.isReactWarning;\n  if (mayWarn) {\n    return element.ref;\n  }\n  getter = Object.getOwnPropertyDescriptor(element, \"ref\")?.get;\n  mayWarn = getter && \"isReactWarning\" in getter && getter.isReactWarning;\n  if (mayWarn) {\n    return element.props.ref;\n  }\n  return element.props.ref || element.ref;\n}\nvar Root = Slot;\nexport {\n  Root,\n  Slot,\n  Slottable\n};\n//# sourceMappingURL=index.mjs.map\n","// packages/react/primitive/src/Primitive.tsx\nimport * as React from \"react\";\nimport * as ReactDOM from \"react-dom\";\nimport { Slot } from \"@radix-ui/react-slot\";\nimport { jsx } from \"react/jsx-runtime\";\nvar NODES = [\n  \"a\",\n  \"button\",\n  \"div\",\n  \"form\",\n  \"h2\",\n  \"h3\",\n  \"img\",\n  \"input\",\n  \"label\",\n  \"li\",\n  \"nav\",\n  \"ol\",\n  \"p\",\n  \"span\",\n  \"svg\",\n  \"ul\"\n];\nvar Primitive = NODES.reduce((primitive, node) => {\n  const Node = React.forwardRef((props, forwardedRef) => {\n    const { asChild, ...primitiveProps } = props;\n    const Comp = asChild ? Slot : node;\n    if (typeof window !== \"undefined\") {\n      window[Symbol.for(\"radix-ui\")] = true;\n    }\n    return /* @__PURE__ */ jsx(Comp, { ...primitiveProps, ref: forwardedRef });\n  });\n  Node.displayName = `Primitive.${node}`;\n  return { ...primitive, [node]: Node };\n}, {});\nfunction dispatchDiscreteCustomEvent(target, event) {\n  if (target) ReactDOM.flushSync(() => target.dispatchEvent(event));\n}\nvar Root = Primitive;\nexport {\n  Primitive,\n  Root,\n  dispatchDiscreteCustomEvent\n};\n//# sourceMappingURL=index.mjs.map\n","// packages/react/use-escape-keydown/src/useEscapeKeydown.tsx\nimport * as React from \"react\";\nimport { useCallbackRef } from \"@radix-ui/react-use-callback-ref\";\nfunction useEscapeKeydown(onEscapeKeyDownProp, ownerDocument = globalThis?.document) {\n  const onEscapeKeyDown = useCallbackRef(onEscapeKeyDownProp);\n  React.useEffect(() => {\n    const handleKeyDown = (event) => {\n      if (event.key === \"Escape\") {\n        onEscapeKeyDown(event);\n      }\n    };\n    ownerDocument.addEventListener(\"keydown\", handleKeyDown, { capture: true });\n    return () => ownerDocument.removeEventListener(\"keydown\", handleKeyDown, { capture: true });\n  }, [onEscapeKeyDown, ownerDocument]);\n}\nexport {\n  useEscapeKeydown\n};\n//# sourceMappingURL=index.mjs.map\n","import * as React from 'react';\nimport { composeEventHandlers } from '@radix-ui/primitive';\nimport { Primitive, dispatchDiscreteCustomEvent } from '@radix-ui/react-primitive';\nimport { useComposedRefs } from '@radix-ui/react-compose-refs';\nimport { useCallbackRef } from '@radix-ui/react-use-callback-ref';\nimport { useEscapeKeydown } from '@radix-ui/react-use-escape-keydown';\n\n/* -------------------------------------------------------------------------------------------------\n * DismissableLayer\n * -----------------------------------------------------------------------------------------------*/\n\nconst DISMISSABLE_LAYER_NAME = 'DismissableLayer';\nconst CONTEXT_UPDATE = 'dismissableLayer.update';\nconst POINTER_DOWN_OUTSIDE = 'dismissableLayer.pointerDownOutside';\nconst FOCUS_OUTSIDE = 'dismissableLayer.focusOutside';\n\nlet originalBodyPointerEvents: string;\n\nconst DismissableLayerContext = React.createContext({\n  layers: new Set<DismissableLayerElement>(),\n  layersWithOutsidePointerEventsDisabled: new Set<DismissableLayerElement>(),\n  branches: new Set<DismissableLayerBranchElement>(),\n});\n\ntype DismissableLayerElement = React.ElementRef<typeof Primitive.div>;\ntype PrimitiveDivProps = React.ComponentPropsWithoutRef<typeof Primitive.div>;\ninterface DismissableLayerProps extends PrimitiveDivProps {\n  /**\n   * When `true`, hover/focus/click interactions will be disabled on elements outside\n   * the `DismissableLayer`. Users will need to click twice on outside elements to\n   * interact with them: once to close the `DismissableLayer`, and again to trigger the element.\n   */\n  disableOutsidePointerEvents?: boolean;\n  /**\n   * Event handler called when the escape key is down.\n   * Can be prevented.\n   */\n  onEscapeKeyDown?: (event: KeyboardEvent) => void;\n  /**\n   * Event handler called when the a `pointerdown` event happens outside of the `DismissableLayer`.\n   * Can be prevented.\n   */\n  onPointerDownOutside?: (event: PointerDownOutsideEvent) => void;\n  /**\n   * Event handler called when the focus moves outside of the `DismissableLayer`.\n   * Can be prevented.\n   */\n  onFocusOutside?: (event: FocusOutsideEvent) => void;\n  /**\n   * Event handler called when an interaction happens outside the `DismissableLayer`.\n   * Specifically, when a `pointerdown` event happens outside or focus moves outside of it.\n   * Can be prevented.\n   */\n  onInteractOutside?: (event: PointerDownOutsideEvent | FocusOutsideEvent) => void;\n  /**\n   * Handler called when the `DismissableLayer` should be dismissed\n   */\n  onDismiss?: () => void;\n}\n\nconst DismissableLayer = React.forwardRef<DismissableLayerElement, DismissableLayerProps>(\n  (props, forwardedRef) => {\n    const {\n      disableOutsidePointerEvents = false,\n      onEscapeKeyDown,\n      onPointerDownOutside,\n      onFocusOutside,\n      onInteractOutside,\n      onDismiss,\n      ...layerProps\n    } = props;\n    const context = React.useContext(DismissableLayerContext);\n    const [node, setNode] = React.useState<DismissableLayerElement | null>(null);\n    const ownerDocument = node?.ownerDocument ?? globalThis?.document;\n    const [, force] = React.useState({});\n    const composedRefs = useComposedRefs(forwardedRef, (node) => setNode(node));\n    const layers = Array.from(context.layers);\n    const [highestLayerWithOutsidePointerEventsDisabled] = [...context.layersWithOutsidePointerEventsDisabled].slice(-1); // prettier-ignore\n    const highestLayerWithOutsidePointerEventsDisabledIndex = layers.indexOf(highestLayerWithOutsidePointerEventsDisabled); // prettier-ignore\n    const index = node ? layers.indexOf(node) : -1;\n    const isBodyPointerEventsDisabled = context.layersWithOutsidePointerEventsDisabled.size > 0;\n    const isPointerEventsEnabled = index >= highestLayerWithOutsidePointerEventsDisabledIndex;\n\n    const pointerDownOutside = usePointerDownOutside((event) => {\n      const target = event.target as HTMLElement;\n      const isPointerDownOnBranch = [...context.branches].some((branch) => branch.contains(target));\n      if (!isPointerEventsEnabled || isPointerDownOnBranch) return;\n      onPointerDownOutside?.(event);\n      onInteractOutside?.(event);\n      if (!event.defaultPrevented) onDismiss?.();\n    }, ownerDocument);\n\n    const focusOutside = useFocusOutside((event) => {\n      const target = event.target as HTMLElement;\n      const isFocusInBranch = [...context.branches].some((branch) => branch.contains(target));\n      if (isFocusInBranch) return;\n      onFocusOutside?.(event);\n      onInteractOutside?.(event);\n      if (!event.defaultPrevented) onDismiss?.();\n    }, ownerDocument);\n\n    useEscapeKeydown((event) => {\n      const isHighestLayer = index === context.layers.size - 1;\n      if (!isHighestLayer) return;\n      onEscapeKeyDown?.(event);\n      if (!event.defaultPrevented && onDismiss) {\n        event.preventDefault();\n        onDismiss();\n      }\n    }, ownerDocument);\n\n    React.useEffect(() => {\n      if (!node) return;\n      if (disableOutsidePointerEvents) {\n        if (context.layersWithOutsidePointerEventsDisabled.size === 0) {\n          originalBodyPointerEvents = ownerDocument.body.style.pointerEvents;\n          ownerDocument.body.style.pointerEvents = 'none';\n        }\n        context.layersWithOutsidePointerEventsDisabled.add(node);\n      }\n      context.layers.add(node);\n      dispatchUpdate();\n      return () => {\n        if (\n          disableOutsidePointerEvents &&\n          context.layersWithOutsidePointerEventsDisabled.size === 1\n        ) {\n          ownerDocument.body.style.pointerEvents = originalBodyPointerEvents;\n        }\n      };\n    }, [node, ownerDocument, disableOutsidePointerEvents, context]);\n\n    /**\n     * We purposefully prevent combining this effect with the `disableOutsidePointerEvents` effect\n     * because a change to `disableOutsidePointerEvents` would remove this layer from the stack\n     * and add it to the end again so the layering order wouldn't be _creation order_.\n     * We only want them to be removed from context stacks when unmounted.\n     */\n    React.useEffect(() => {\n      return () => {\n        if (!node) return;\n        context.layers.delete(node);\n        context.layersWithOutsidePointerEventsDisabled.delete(node);\n        dispatchUpdate();\n      };\n    }, [node, context]);\n\n    React.useEffect(() => {\n      const handleUpdate = () => force({});\n      document.addEventListener(CONTEXT_UPDATE, handleUpdate);\n      return () => document.removeEventListener(CONTEXT_UPDATE, handleUpdate);\n    }, []);\n\n    return (\n      <Primitive.div\n        {...layerProps}\n        ref={composedRefs}\n        style={{\n          pointerEvents: isBodyPointerEventsDisabled\n            ? isPointerEventsEnabled\n              ? 'auto'\n              : 'none'\n            : undefined,\n          ...props.style,\n        }}\n        onFocusCapture={composeEventHandlers(props.onFocusCapture, focusOutside.onFocusCapture)}\n        onBlurCapture={composeEventHandlers(props.onBlurCapture, focusOutside.onBlurCapture)}\n        onPointerDownCapture={composeEventHandlers(\n          props.onPointerDownCapture,\n          pointerDownOutside.onPointerDownCapture\n        )}\n      />\n    );\n  }\n);\n\nDismissableLayer.displayName = DISMISSABLE_LAYER_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * DismissableLayerBranch\n * -----------------------------------------------------------------------------------------------*/\n\nconst BRANCH_NAME = 'DismissableLayerBranch';\n\ntype DismissableLayerBranchElement = React.ElementRef<typeof Primitive.div>;\ninterface DismissableLayerBranchProps extends PrimitiveDivProps {}\n\nconst DismissableLayerBranch = React.forwardRef<\n  DismissableLayerBranchElement,\n  DismissableLayerBranchProps\n>((props, forwardedRef) => {\n  const context = React.useContext(DismissableLayerContext);\n  const ref = React.useRef<DismissableLayerBranchElement>(null);\n  const composedRefs = useComposedRefs(forwardedRef, ref);\n\n  React.useEffect(() => {\n    const node = ref.current;\n    if (node) {\n      context.branches.add(node);\n      return () => {\n        context.branches.delete(node);\n      };\n    }\n  }, [context.branches]);\n\n  return <Primitive.div {...props} ref={composedRefs} />;\n});\n\nDismissableLayerBranch.displayName = BRANCH_NAME;\n\n/* -----------------------------------------------------------------------------------------------*/\n\ntype PointerDownOutsideEvent = CustomEvent<{ originalEvent: PointerEvent }>;\ntype FocusOutsideEvent = CustomEvent<{ originalEvent: FocusEvent }>;\n\n/**\n * Listens for `pointerdown` outside a react subtree. We use `pointerdown` rather than `pointerup`\n * to mimic layer dismissing behaviour present in OS.\n * Returns props to pass to the node we want to check for outside events.\n */\nfunction usePointerDownOutside(\n  onPointerDownOutside?: (event: PointerDownOutsideEvent) => void,\n  ownerDocument: Document = globalThis?.document\n) {\n  const handlePointerDownOutside = useCallbackRef(onPointerDownOutside) as EventListener;\n  const isPointerInsideReactTreeRef = React.useRef(false);\n  const handleClickRef = React.useRef(() => {});\n\n  React.useEffect(() => {\n    const handlePointerDown = (event: PointerEvent) => {\n      if (event.target && !isPointerInsideReactTreeRef.current) {\n        const eventDetail = { originalEvent: event };\n\n        function handleAndDispatchPointerDownOutsideEvent() {\n          handleAndDispatchCustomEvent(\n            POINTER_DOWN_OUTSIDE,\n            handlePointerDownOutside,\n            eventDetail,\n            { discrete: true }\n          );\n        }\n\n        /**\n         * On touch devices, we need to wait for a click event because browsers implement\n         * a ~350ms delay between the time the user stops touching the display and when the\n         * browser executres events. We need to ensure we don't reactivate pointer-events within\n         * this timeframe otherwise the browser may execute events that should have been prevented.\n         *\n         * Additionally, this also lets us deal automatically with cancellations when a click event\n         * isn't raised because the page was considered scrolled/drag-scrolled, long-pressed, etc.\n         *\n         * This is why we also continuously remove the previous listener, because we cannot be\n         * certain that it was raised, and therefore cleaned-up.\n         */\n        if (event.pointerType === 'touch') {\n          ownerDocument.removeEventListener('click', handleClickRef.current);\n          handleClickRef.current = handleAndDispatchPointerDownOutsideEvent;\n          ownerDocument.addEventListener('click', handleClickRef.current, { once: true });\n        } else {\n          handleAndDispatchPointerDownOutsideEvent();\n        }\n      } else {\n        // We need to remove the event listener in case the outside click has been canceled.\n        // See: https://github.com/radix-ui/primitives/issues/2171\n        ownerDocument.removeEventListener('click', handleClickRef.current);\n      }\n      isPointerInsideReactTreeRef.current = false;\n    };\n    /**\n     * if this hook executes in a component that mounts via a `pointerdown` event, the event\n     * would bubble up to the document and trigger a `pointerDownOutside` event. We avoid\n     * this by delaying the event listener registration on the document.\n     * This is not React specific, but rather how the DOM works, ie:\n     * ```\n     * button.addEventListener('pointerdown', () => {\n     *   console.log('I will log');\n     *   document.addEventListener('pointerdown', () => {\n     *     console.log('I will also log');\n     *   })\n     * });\n     */\n    const timerId = window.setTimeout(() => {\n      ownerDocument.addEventListener('pointerdown', handlePointerDown);\n    }, 0);\n    return () => {\n      window.clearTimeout(timerId);\n      ownerDocument.removeEventListener('pointerdown', handlePointerDown);\n      ownerDocument.removeEventListener('click', handleClickRef.current);\n    };\n  }, [ownerDocument, handlePointerDownOutside]);\n\n  return {\n    // ensures we check React component tree (not just DOM tree)\n    onPointerDownCapture: () => (isPointerInsideReactTreeRef.current = true),\n  };\n}\n\n/**\n * Listens for when focus happens outside a react subtree.\n * Returns props to pass to the root (node) of the subtree we want to check.\n */\nfunction useFocusOutside(\n  onFocusOutside?: (event: FocusOutsideEvent) => void,\n  ownerDocument: Document = globalThis?.document\n) {\n  const handleFocusOutside = useCallbackRef(onFocusOutside) as EventListener;\n  const isFocusInsideReactTreeRef = React.useRef(false);\n\n  React.useEffect(() => {\n    const handleFocus = (event: FocusEvent) => {\n      if (event.target && !isFocusInsideReactTreeRef.current) {\n        const eventDetail = { originalEvent: event };\n        handleAndDispatchCustomEvent(FOCUS_OUTSIDE, handleFocusOutside, eventDetail, {\n          discrete: false,\n        });\n      }\n    };\n    ownerDocument.addEventListener('focusin', handleFocus);\n    return () => ownerDocument.removeEventListener('focusin', handleFocus);\n  }, [ownerDocument, handleFocusOutside]);\n\n  return {\n    onFocusCapture: () => (isFocusInsideReactTreeRef.current = true),\n    onBlurCapture: () => (isFocusInsideReactTreeRef.current = false),\n  };\n}\n\nfunction dispatchUpdate() {\n  const event = new CustomEvent(CONTEXT_UPDATE);\n  document.dispatchEvent(event);\n}\n\nfunction handleAndDispatchCustomEvent<E extends CustomEvent, OriginalEvent extends Event>(\n  name: string,\n  handler: ((event: E) => void) | undefined,\n  detail: { originalEvent: OriginalEvent } & (E extends CustomEvent<infer D> ? D : never),\n  { discrete }: { discrete: boolean }\n) {\n  const target = detail.originalEvent.target;\n  const event = new CustomEvent(name, { bubbles: false, cancelable: true, detail });\n  if (handler) target.addEventListener(name, handler as EventListener, { once: true });\n\n  if (discrete) {\n    dispatchDiscreteCustomEvent(target, event);\n  } else {\n    target.dispatchEvent(event);\n  }\n}\n\nconst Root = DismissableLayer;\nconst Branch = DismissableLayerBranch;\n\nexport {\n  DismissableLayer,\n  DismissableLayerBranch,\n  //\n  Root,\n  Branch,\n};\nexport type { DismissableLayerProps };\n","import * as React from 'react';\nimport { useComposedRefs } from '@radix-ui/react-compose-refs';\nimport { Primitive } from '@radix-ui/react-primitive';\nimport { useCallbackRef } from '@radix-ui/react-use-callback-ref';\n\nconst AUTOFOCUS_ON_MOUNT = 'focusScope.autoFocusOnMount';\nconst AUTOFOCUS_ON_UNMOUNT = 'focusScope.autoFocusOnUnmount';\nconst EVENT_OPTIONS = { bubbles: false, cancelable: true };\n\ntype FocusableTarget = HTMLElement | { focus(): void };\n\n/* -------------------------------------------------------------------------------------------------\n * FocusScope\n * -----------------------------------------------------------------------------------------------*/\n\nconst FOCUS_SCOPE_NAME = 'FocusScope';\n\ntype FocusScopeElement = React.ElementRef<typeof Primitive.div>;\ntype PrimitiveDivProps = React.ComponentPropsWithoutRef<typeof Primitive.div>;\ninterface FocusScopeProps extends PrimitiveDivProps {\n  /**\n   * When `true`, tabbing from last item will focus first tabbable\n   * and shift+tab from first item will focus last tababble.\n   * @defaultValue false\n   */\n  loop?: boolean;\n\n  /**\n   * When `true`, focus cannot escape the focus scope via keyboard,\n   * pointer, or a programmatic focus.\n   * @defaultValue false\n   */\n  trapped?: boolean;\n\n  /**\n   * Event handler called when auto-focusing on mount.\n   * Can be prevented.\n   */\n  onMountAutoFocus?: (event: Event) => void;\n\n  /**\n   * Event handler called when auto-focusing on unmount.\n   * Can be prevented.\n   */\n  onUnmountAutoFocus?: (event: Event) => void;\n}\n\nconst FocusScope = React.forwardRef<FocusScopeElement, FocusScopeProps>((props, forwardedRef) => {\n  const {\n    loop = false,\n    trapped = false,\n    onMountAutoFocus: onMountAutoFocusProp,\n    onUnmountAutoFocus: onUnmountAutoFocusProp,\n    ...scopeProps\n  } = props;\n  const [container, setContainer] = React.useState<HTMLElement | null>(null);\n  const onMountAutoFocus = useCallbackRef(onMountAutoFocusProp);\n  const onUnmountAutoFocus = useCallbackRef(onUnmountAutoFocusProp);\n  const lastFocusedElementRef = React.useRef<HTMLElement | null>(null);\n  const composedRefs = useComposedRefs(forwardedRef, (node) => setContainer(node));\n\n  const focusScope = React.useRef({\n    paused: false,\n    pause() {\n      this.paused = true;\n    },\n    resume() {\n      this.paused = false;\n    },\n  }).current;\n\n  // Takes care of trapping focus if focus is moved outside programmatically for example\n  React.useEffect(() => {\n    if (trapped) {\n      function handleFocusIn(event: FocusEvent) {\n        if (focusScope.paused || !container) return;\n        const target = event.target as HTMLElement | null;\n        if (container.contains(target)) {\n          lastFocusedElementRef.current = target;\n        } else {\n          focus(lastFocusedElementRef.current, { select: true });\n        }\n      }\n\n      function handleFocusOut(event: FocusEvent) {\n        if (focusScope.paused || !container) return;\n        const relatedTarget = event.relatedTarget as HTMLElement | null;\n\n        // A `focusout` event with a `null` `relatedTarget` will happen in at least two cases:\n        //\n        // 1. When the user switches app/tabs/windows/the browser itself loses focus.\n        // 2. In Google Chrome, when the focused element is removed from the DOM.\n        //\n        // We let the browser do its thing here because:\n        //\n        // 1. The browser already keeps a memory of what's focused for when the page gets refocused.\n        // 2. In Google Chrome, if we try to focus the deleted focused element (as per below), it\n        //    throws the CPU to 100%, so we avoid doing anything for this reason here too.\n        if (relatedTarget === null) return;\n\n        // If the focus has moved to an actual legitimate element (`relatedTarget !== null`)\n        // that is outside the container, we move focus to the last valid focused element inside.\n        if (!container.contains(relatedTarget)) {\n          focus(lastFocusedElementRef.current, { select: true });\n        }\n      }\n\n      // When the focused element gets removed from the DOM, browsers move focus\n      // back to the document.body. In this case, we move focus to the container\n      // to keep focus trapped correctly.\n      function handleMutations(mutations: MutationRecord[]) {\n        const focusedElement = document.activeElement as HTMLElement | null;\n        if (focusedElement !== document.body) return;\n        for (const mutation of mutations) {\n          if (mutation.removedNodes.length > 0) focus(container);\n        }\n      }\n\n      document.addEventListener('focusin', handleFocusIn);\n      document.addEventListener('focusout', handleFocusOut);\n      const mutationObserver = new MutationObserver(handleMutations);\n      if (container) mutationObserver.observe(container, { childList: true, subtree: true });\n\n      return () => {\n        document.removeEventListener('focusin', handleFocusIn);\n        document.removeEventListener('focusout', handleFocusOut);\n        mutationObserver.disconnect();\n      };\n    }\n  }, [trapped, container, focusScope.paused]);\n\n  React.useEffect(() => {\n    if (container) {\n      focusScopesStack.add(focusScope);\n      const previouslyFocusedElement = document.activeElement as HTMLElement | null;\n      const hasFocusedCandidate = container.contains(previouslyFocusedElement);\n\n      if (!hasFocusedCandidate) {\n        const mountEvent = new CustomEvent(AUTOFOCUS_ON_MOUNT, EVENT_OPTIONS);\n        container.addEventListener(AUTOFOCUS_ON_MOUNT, onMountAutoFocus);\n        container.dispatchEvent(mountEvent);\n        if (!mountEvent.defaultPrevented) {\n          focusFirst(removeLinks(getTabbableCandidates(container)), { select: true });\n          if (document.activeElement === previouslyFocusedElement) {\n            focus(container);\n          }\n        }\n      }\n\n      return () => {\n        container.removeEventListener(AUTOFOCUS_ON_MOUNT, onMountAutoFocus);\n\n        // We hit a react bug (fixed in v17) with focusing in unmount.\n        // We need to delay the focus a little to get around it for now.\n        // See: https://github.com/facebook/react/issues/17894\n        setTimeout(() => {\n          const unmountEvent = new CustomEvent(AUTOFOCUS_ON_UNMOUNT, EVENT_OPTIONS);\n          container.addEventListener(AUTOFOCUS_ON_UNMOUNT, onUnmountAutoFocus);\n          container.dispatchEvent(unmountEvent);\n          if (!unmountEvent.defaultPrevented) {\n            focus(previouslyFocusedElement ?? document.body, { select: true });\n          }\n          // we need to remove the listener after we `dispatchEvent`\n          container.removeEventListener(AUTOFOCUS_ON_UNMOUNT, onUnmountAutoFocus);\n\n          focusScopesStack.remove(focusScope);\n        }, 0);\n      };\n    }\n  }, [container, onMountAutoFocus, onUnmountAutoFocus, focusScope]);\n\n  // Takes care of looping focus (when tabbing whilst at the edges)\n  const handleKeyDown = React.useCallback(\n    (event: React.KeyboardEvent) => {\n      if (!loop && !trapped) return;\n      if (focusScope.paused) return;\n\n      const isTabKey = event.key === 'Tab' && !event.altKey && !event.ctrlKey && !event.metaKey;\n      const focusedElement = document.activeElement as HTMLElement | null;\n\n      if (isTabKey && focusedElement) {\n        const container = event.currentTarget as HTMLElement;\n        const [first, last] = getTabbableEdges(container);\n        const hasTabbableElementsInside = first && last;\n\n        // we can only wrap focus if we have tabbable edges\n        if (!hasTabbableElementsInside) {\n          if (focusedElement === container) event.preventDefault();\n        } else {\n          if (!event.shiftKey && focusedElement === last) {\n            event.preventDefault();\n            if (loop) focus(first, { select: true });\n          } else if (event.shiftKey && focusedElement === first) {\n            event.preventDefault();\n            if (loop) focus(last, { select: true });\n          }\n        }\n      }\n    },\n    [loop, trapped, focusScope.paused]\n  );\n\n  return (\n    <Primitive.div tabIndex={-1} {...scopeProps} ref={composedRefs} onKeyDown={handleKeyDown} />\n  );\n});\n\nFocusScope.displayName = FOCUS_SCOPE_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * Utils\n * -----------------------------------------------------------------------------------------------*/\n\n/**\n * Attempts focusing the first element in a list of candidates.\n * Stops when focus has actually moved.\n */\nfunction focusFirst(candidates: HTMLElement[], { select = false } = {}) {\n  const previouslyFocusedElement = document.activeElement;\n  for (const candidate of candidates) {\n    focus(candidate, { select });\n    if (document.activeElement !== previouslyFocusedElement) return;\n  }\n}\n\n/**\n * Returns the first and last tabbable elements inside a container.\n */\nfunction getTabbableEdges(container: HTMLElement) {\n  const candidates = getTabbableCandidates(container);\n  const first = findVisible(candidates, container);\n  const last = findVisible(candidates.reverse(), container);\n  return [first, last] as const;\n}\n\n/**\n * Returns a list of potential tabbable candidates.\n *\n * NOTE: This is only a close approximation. For example it doesn't take into account cases like when\n * elements are not visible. This cannot be worked out easily by just reading a property, but rather\n * necessitate runtime knowledge (computed styles, etc). We deal with these cases separately.\n *\n * See: https://developer.mozilla.org/en-US/docs/Web/API/TreeWalker\n * Credit: https://github.com/discord/focus-layers/blob/master/src/util/wrapFocus.tsx#L1\n */\nfunction getTabbableCandidates(container: HTMLElement) {\n  const nodes: HTMLElement[] = [];\n  const walker = document.createTreeWalker(container, NodeFilter.SHOW_ELEMENT, {\n    acceptNode: (node: any) => {\n      const isHiddenInput = node.tagName === 'INPUT' && node.type === 'hidden';\n      if (node.disabled || node.hidden || isHiddenInput) return NodeFilter.FILTER_SKIP;\n      // `.tabIndex` is not the same as the `tabindex` attribute. It works on the\n      // runtime's understanding of tabbability, so this automatically accounts\n      // for any kind of element that could be tabbed to.\n      return node.tabIndex >= 0 ? NodeFilter.FILTER_ACCEPT : NodeFilter.FILTER_SKIP;\n    },\n  });\n  while (walker.nextNode()) nodes.push(walker.currentNode as HTMLElement);\n  // we do not take into account the order of nodes with positive `tabIndex` as it\n  // hinders accessibility to have tab order different from visual order.\n  return nodes;\n}\n\n/**\n * Returns the first visible element in a list.\n * NOTE: Only checks visibility up to the `container`.\n */\nfunction findVisible(elements: HTMLElement[], container: HTMLElement) {\n  for (const element of elements) {\n    // we stop checking if it's hidden at the `container` level (excluding)\n    if (!isHidden(element, { upTo: container })) return element;\n  }\n}\n\nfunction isHidden(node: HTMLElement, { upTo }: { upTo?: HTMLElement }) {\n  if (getComputedStyle(node).visibility === 'hidden') return true;\n  while (node) {\n    // we stop at `upTo` (excluding it)\n    if (upTo !== undefined && node === upTo) return false;\n    if (getComputedStyle(node).display === 'none') return true;\n    node = node.parentElement as HTMLElement;\n  }\n  return false;\n}\n\nfunction isSelectableInput(element: any): element is FocusableTarget & { select: () => void } {\n  return element instanceof HTMLInputElement && 'select' in element;\n}\n\nfunction focus(element?: FocusableTarget | null, { select = false } = {}) {\n  // only focus if that element is focusable\n  if (element && element.focus) {\n    const previouslyFocusedElement = document.activeElement;\n    // NOTE: we prevent scrolling on focus, to minimize jarring transitions for users\n    element.focus({ preventScroll: true });\n    // only select if its not the same element, it supports selection and we need to select\n    if (element !== previouslyFocusedElement && isSelectableInput(element) && select)\n      element.select();\n  }\n}\n\n/* -------------------------------------------------------------------------------------------------\n * FocusScope stack\n * -----------------------------------------------------------------------------------------------*/\n\ntype FocusScopeAPI = { paused: boolean; pause(): void; resume(): void };\nconst focusScopesStack = createFocusScopesStack();\n\nfunction createFocusScopesStack() {\n  /** A stack of focus scopes, with the active one at the top */\n  let stack: FocusScopeAPI[] = [];\n\n  return {\n    add(focusScope: FocusScopeAPI) {\n      // pause the currently active focus scope (at the top of the stack)\n      const activeFocusScope = stack[0];\n      if (focusScope !== activeFocusScope) {\n        activeFocusScope?.pause();\n      }\n      // remove in case it already exists (because we'll re-add it at the top of the stack)\n      stack = arrayRemove(stack, focusScope);\n      stack.unshift(focusScope);\n    },\n\n    remove(focusScope: FocusScopeAPI) {\n      stack = arrayRemove(stack, focusScope);\n      stack[0]?.resume();\n    },\n  };\n}\n\nfunction arrayRemove<T>(array: T[], item: T) {\n  const updatedArray = [...array];\n  const index = updatedArray.indexOf(item);\n  if (index !== -1) {\n    updatedArray.splice(index, 1);\n  }\n  return updatedArray;\n}\n\nfunction removeLinks(items: HTMLElement[]) {\n  return items.filter((item) => item.tagName !== 'A');\n}\n\nconst Root = FocusScope;\n\nexport {\n  FocusScope,\n  //\n  Root,\n};\nexport type { FocusScopeProps };\n","import * as React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Primitive } from '@radix-ui/react-primitive';\nimport { useLayoutEffect } from '@radix-ui/react-use-layout-effect';\n\n/* -------------------------------------------------------------------------------------------------\n * Portal\n * -----------------------------------------------------------------------------------------------*/\n\nconst PORTAL_NAME = 'Portal';\n\ntype PortalElement = React.ElementRef<typeof Primitive.div>;\ntype PrimitiveDivProps = React.ComponentPropsWithoutRef<typeof Primitive.div>;\ninterface PortalProps extends PrimitiveDivProps {\n  /**\n   * An optional container where the portaled content should be appended.\n   */\n  container?: Element | null;\n}\n\nconst Portal = React.forwardRef<PortalElement, PortalProps>((props, forwardedRef) => {\n  const { container: containerProp, ...portalProps } = props;\n  const [mounted, setMounted] = React.useState(false);\n  useLayoutEffect(() => setMounted(true), []);\n  const container = containerProp || (mounted && globalThis?.document?.body);\n  return container\n    ? ReactDOM.createPortal(<Primitive.div {...portalProps} ref={forwardedRef} />, container)\n    : null;\n});\n\nPortal.displayName = PORTAL_NAME;\n\n/* -----------------------------------------------------------------------------------------------*/\n\nconst Root = Portal;\n\nexport {\n  Portal,\n  //\n  Root,\n};\nexport type { PortalProps };\n","import * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport { useComposedRefs } from '@radix-ui/react-compose-refs';\nimport { useLayoutEffect } from '@radix-ui/react-use-layout-effect';\nimport { useStateMachine } from './useStateMachine';\n\ninterface PresenceProps {\n  children: React.ReactElement | ((props: { present: boolean }) => React.ReactElement);\n  present: boolean;\n}\n\nconst Presence: React.FC<PresenceProps> = (props) => {\n  const { present, children } = props;\n  const presence = usePresence(present);\n\n  const child = (\n    typeof children === 'function'\n      ? children({ present: presence.isPresent })\n      : React.Children.only(children)\n  ) as React.ReactElement;\n\n  const ref = useComposedRefs(presence.ref, getElementRef(child));\n  const forceMount = typeof children === 'function';\n  return forceMount || presence.isPresent ? React.cloneElement(child, { ref }) : null;\n};\n\nPresence.displayName = 'Presence';\n\n/* -------------------------------------------------------------------------------------------------\n * usePresence\n * -----------------------------------------------------------------------------------------------*/\n\nfunction usePresence(present: boolean) {\n  const [node, setNode] = React.useState<HTMLElement>();\n  const stylesRef = React.useRef<CSSStyleDeclaration>({} as any);\n  const prevPresentRef = React.useRef(present);\n  const prevAnimationNameRef = React.useRef<string>('none');\n  const initialState = present ? 'mounted' : 'unmounted';\n  const [state, send] = useStateMachine(initialState, {\n    mounted: {\n      UNMOUNT: 'unmounted',\n      ANIMATION_OUT: 'unmountSuspended',\n    },\n    unmountSuspended: {\n      MOUNT: 'mounted',\n      ANIMATION_END: 'unmounted',\n    },\n    unmounted: {\n      MOUNT: 'mounted',\n    },\n  });\n\n  React.useEffect(() => {\n    const currentAnimationName = getAnimationName(stylesRef.current);\n    prevAnimationNameRef.current = state === 'mounted' ? currentAnimationName : 'none';\n  }, [state]);\n\n  useLayoutEffect(() => {\n    const styles = stylesRef.current;\n    const wasPresent = prevPresentRef.current;\n    const hasPresentChanged = wasPresent !== present;\n\n    if (hasPresentChanged) {\n      const prevAnimationName = prevAnimationNameRef.current;\n      const currentAnimationName = getAnimationName(styles);\n\n      if (present) {\n        send('MOUNT');\n      } else if (currentAnimationName === 'none' || styles?.display === 'none') {\n        // If there is no exit animation or the element is hidden, animations won't run\n        // so we unmount instantly\n        send('UNMOUNT');\n      } else {\n        /**\n         * When `present` changes to `false`, we check changes to animation-name to\n         * determine whether an animation has started. We chose this approach (reading\n         * computed styles) because there is no `animationrun` event and `animationstart`\n         * fires after `animation-delay` has expired which would be too late.\n         */\n        const isAnimating = prevAnimationName !== currentAnimationName;\n\n        if (wasPresent && isAnimating) {\n          send('ANIMATION_OUT');\n        } else {\n          send('UNMOUNT');\n        }\n      }\n\n      prevPresentRef.current = present;\n    }\n  }, [present, send]);\n\n  useLayoutEffect(() => {\n    if (node) {\n      /**\n       * Triggering an ANIMATION_OUT during an ANIMATION_IN will fire an `animationcancel`\n       * event for ANIMATION_IN after we have entered `unmountSuspended` state. So, we\n       * make sure we only trigger ANIMATION_END for the currently active animation.\n       */\n      const handleAnimationEnd = (event: AnimationEvent) => {\n        const currentAnimationName = getAnimationName(stylesRef.current);\n        const isCurrentAnimation = currentAnimationName.includes(event.animationName);\n        if (event.target === node && isCurrentAnimation) {\n          // With React 18 concurrency this update is applied\n          // a frame after the animation ends, creating a flash of visible content.\n          // By manually flushing we ensure they sync within a frame, removing the flash.\n          ReactDOM.flushSync(() => send('ANIMATION_END'));\n        }\n      };\n      const handleAnimationStart = (event: AnimationEvent) => {\n        if (event.target === node) {\n          // if animation occurred, store its name as the previous animation.\n          prevAnimationNameRef.current = getAnimationName(stylesRef.current);\n        }\n      };\n      node.addEventListener('animationstart', handleAnimationStart);\n      node.addEventListener('animationcancel', handleAnimationEnd);\n      node.addEventListener('animationend', handleAnimationEnd);\n      return () => {\n        node.removeEventListener('animationstart', handleAnimationStart);\n        node.removeEventListener('animationcancel', handleAnimationEnd);\n        node.removeEventListener('animationend', handleAnimationEnd);\n      };\n    } else {\n      // Transition to the unmounted state if the node is removed prematurely.\n      // We avoid doing so during cleanup as the node may change but still exist.\n      send('ANIMATION_END');\n    }\n  }, [node, send]);\n\n  return {\n    isPresent: ['mounted', 'unmountSuspended'].includes(state),\n    ref: React.useCallback((node: HTMLElement) => {\n      if (node) stylesRef.current = getComputedStyle(node);\n      setNode(node);\n    }, []),\n  };\n}\n\n/* -----------------------------------------------------------------------------------------------*/\n\nfunction getAnimationName(styles?: CSSStyleDeclaration) {\n  return styles?.animationName || 'none';\n}\n\n// Before React 19 accessing `element.props.ref` will throw a warning and suggest using `element.ref`\n// After React 19 accessing `element.ref` does the opposite.\n// https://github.com/facebook/react/pull/28348\n//\n// Access the ref using the method that doesn't yield a warning.\nfunction getElementRef(element: React.ReactElement) {\n  // React <=18 in DEV\n  let getter = Object.getOwnPropertyDescriptor(element.props, 'ref')?.get;\n  let mayWarn = getter && 'isReactWarning' in getter && getter.isReactWarning;\n  if (mayWarn) {\n    return (element as any).ref;\n  }\n\n  // React 19 in DEV\n  getter = Object.getOwnPropertyDescriptor(element, 'ref')?.get;\n  mayWarn = getter && 'isReactWarning' in getter && getter.isReactWarning;\n  if (mayWarn) {\n    return element.props.ref;\n  }\n\n  // Not DEV\n  return element.props.ref || (element as any).ref;\n}\n\nexport { Presence };\nexport type { PresenceProps };\n","import * as React from 'react';\n\ntype Machine<S> = { [k: string]: { [k: string]: S } };\ntype MachineState<T> = keyof T;\ntype MachineEvent<T> = keyof UnionToIntersection<T[keyof T]>;\n\n// 🤯 https://fettblog.eu/typescript-union-to-intersection/\ntype UnionToIntersection<T> = (T extends any ? (x: T) => any : never) extends (x: infer R) => any\n  ? R\n  : never;\n\nexport function useStateMachine<M>(\n  initialState: MachineState<M>,\n  machine: M & Machine<MachineState<M>>\n) {\n  return React.useReducer((state: MachineState<M>, event: MachineEvent<M>): MachineState<M> => {\n    const nextState = (machine[state] as any)[event];\n    return nextState ?? state;\n  }, initialState);\n}\n","import * as React from 'react';\n\n/** Number of components which have requested interest to have focus guards */\nlet count = 0;\n\nfunction FocusGuards(props: any) {\n  useFocusGuards();\n  return props.children;\n}\n\n/**\n * Injects a pair of focus guards at the edges of the whole DOM tree\n * to ensure `focusin` & `focusout` events can be caught consistently.\n */\nfunction useFocusGuards() {\n  React.useEffect(() => {\n    const edgeGuards = document.querySelectorAll('[data-radix-focus-guard]');\n    document.body.insertAdjacentElement('afterbegin', edgeGuards[0] ?? createFocusGuard());\n    document.body.insertAdjacentElement('beforeend', edgeGuards[1] ?? createFocusGuard());\n    count++;\n\n    return () => {\n      if (count === 1) {\n        document.querySelectorAll('[data-radix-focus-guard]').forEach((node) => node.remove());\n      }\n      count--;\n    };\n  }, []);\n}\n\nfunction createFocusGuard() {\n  const element = document.createElement('span');\n  element.setAttribute('data-radix-focus-guard', '');\n  element.tabIndex = 0;\n  element.style.cssText = 'outline: none; opacity: 0; position: fixed; pointer-events: none';\n  return element;\n}\n\nconst Root = FocusGuards;\n\nexport {\n  FocusGuards,\n  //\n  Root,\n  //\n  useFocusGuards,\n};\n","import { createSidecarMedium } from 'use-sidecar';\nexport var effectCar = createSidecarMedium();\n","import { __assign, __rest } from \"tslib\";\nimport * as React from 'react';\nimport { fullWidthClassName, zeroRightClassName } from 'react-remove-scroll-bar/constants';\nimport { useMergeRefs } from 'use-callback-ref';\nimport { effectCar } from './medium';\nvar nothing = function () {\n    return;\n};\n/**\n * Removes scrollbar from the page and contain the scroll within the Lock\n */\nvar RemoveScroll = React.forwardRef(function (props, parentRef) {\n    var ref = React.useRef(null);\n    var _a = React.useState({\n        onScrollCapture: nothing,\n        onWheelCapture: nothing,\n        onTouchMoveCapture: nothing,\n    }), callbacks = _a[0], setCallbacks = _a[1];\n    var forwardProps = props.forwardProps, children = props.children, className = props.className, removeScrollBar = props.removeScrollBar, enabled = props.enabled, shards = props.shards, sideCar = props.sideCar, noIsolation = props.noIsolation, inert = props.inert, allowPinchZoom = props.allowPinchZoom, _b = props.as, Container = _b === void 0 ? 'div' : _b, gapMode = props.gapMode, rest = __rest(props, [\"forwardProps\", \"children\", \"className\", \"removeScrollBar\", \"enabled\", \"shards\", \"sideCar\", \"noIsolation\", \"inert\", \"allowPinchZoom\", \"as\", \"gapMode\"]);\n    var SideCar = sideCar;\n    var containerRef = useMergeRefs([ref, parentRef]);\n    var containerProps = __assign(__assign({}, rest), callbacks);\n    return (React.createElement(React.Fragment, null,\n        enabled && (React.createElement(SideCar, { sideCar: effectCar, removeScrollBar: removeScrollBar, shards: shards, noIsolation: noIsolation, inert: inert, setCallbacks: setCallbacks, allowPinchZoom: !!allowPinchZoom, lockRef: ref, gapMode: gapMode })),\n        forwardProps ? (React.cloneElement(React.Children.only(children), __assign(__assign({}, containerProps), { ref: containerRef }))) : (React.createElement(Container, __assign({}, containerProps, { className: className, ref: containerRef }), children))));\n});\nRemoveScroll.defaultProps = {\n    enabled: true,\n    removeScrollBar: true,\n    inert: false,\n};\nRemoveScroll.classNames = {\n    fullWidth: fullWidthClassName,\n    zeroRight: zeroRightClassName,\n};\nexport { RemoveScroll };\n","var passiveSupported = false;\nif (typeof window !== 'undefined') {\n    try {\n        var options = Object.defineProperty({}, 'passive', {\n            get: function () {\n                passiveSupported = true;\n                return true;\n            },\n        });\n        // @ts-ignore\n        window.addEventListener('test', options, options);\n        // @ts-ignore\n        window.removeEventListener('test', options, options);\n    }\n    catch (err) {\n        passiveSupported = false;\n    }\n}\nexport var nonPassive = passiveSupported ? { passive: false } : false;\n","var alwaysContainsScroll = function (node) {\n    // textarea will always _contain_ scroll inside self. It only can be hidden\n    return node.tagName === 'TEXTAREA';\n};\nvar elementCanBeScrolled = function (node, overflow) {\n    var styles = window.getComputedStyle(node);\n    return (\n    // not-not-scrollable\n    styles[overflow] !== 'hidden' &&\n        // contains scroll inside self\n        !(styles.overflowY === styles.overflowX && !alwaysContainsScroll(node) && styles[overflow] === 'visible'));\n};\nvar elementCouldBeVScrolled = function (node) { return elementCanBeScrolled(node, 'overflowY'); };\nvar elementCouldBeHScrolled = function (node) { return elementCanBeScrolled(node, 'overflowX'); };\nexport var locationCouldBeScrolled = function (axis, node) {\n    var ownerDocument = node.ownerDocument;\n    var current = node;\n    do {\n        // Skip over shadow root\n        if (typeof ShadowRoot !== 'undefined' && current instanceof ShadowRoot) {\n            current = current.host;\n        }\n        var isScrollable = elementCouldBeScrolled(axis, current);\n        if (isScrollable) {\n            var _a = getScrollVariables(axis, current), s = _a[1], d = _a[2];\n            if (s > d) {\n                return true;\n            }\n        }\n        current = current.parentNode;\n    } while (current && current !== ownerDocument.body);\n    return false;\n};\nvar getVScrollVariables = function (_a) {\n    var scrollTop = _a.scrollTop, scrollHeight = _a.scrollHeight, clientHeight = _a.clientHeight;\n    return [\n        scrollTop,\n        scrollHeight,\n        clientHeight,\n    ];\n};\nvar getHScrollVariables = function (_a) {\n    var scrollLeft = _a.scrollLeft, scrollWidth = _a.scrollWidth, clientWidth = _a.clientWidth;\n    return [\n        scrollLeft,\n        scrollWidth,\n        clientWidth,\n    ];\n};\nvar elementCouldBeScrolled = function (axis, node) {\n    return axis === 'v' ? elementCouldBeVScrolled(node) : elementCouldBeHScrolled(node);\n};\nvar getScrollVariables = function (axis, node) {\n    return axis === 'v' ? getVScrollVariables(node) : getHScrollVariables(node);\n};\nvar getDirectionFactor = function (axis, direction) {\n    /**\n     * If the element's direction is rtl (right-to-left), then scrollLeft is 0 when the scrollbar is at its rightmost position,\n     * and then increasingly negative as you scroll towards the end of the content.\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/Element/scrollLeft\n     */\n    return axis === 'h' && direction === 'rtl' ? -1 : 1;\n};\nexport var handleScroll = function (axis, endTarget, event, sourceDelta, noOverscroll) {\n    var directionFactor = getDirectionFactor(axis, window.getComputedStyle(endTarget).direction);\n    var delta = directionFactor * sourceDelta;\n    // find scrollable target\n    var target = event.target;\n    var targetInLock = endTarget.contains(target);\n    var shouldCancelScroll = false;\n    var isDeltaPositive = delta > 0;\n    var availableScroll = 0;\n    var availableScrollTop = 0;\n    do {\n        var _a = getScrollVariables(axis, target), position = _a[0], scroll_1 = _a[1], capacity = _a[2];\n        var elementScroll = scroll_1 - capacity - directionFactor * position;\n        if (position || elementScroll) {\n            if (elementCouldBeScrolled(axis, target)) {\n                availableScroll += elementScroll;\n                availableScrollTop += position;\n            }\n        }\n        if (target instanceof ShadowRoot) {\n            target = target.host;\n        }\n        else {\n            target = target.parentNode;\n        }\n    } while (\n    // portaled content\n    (!targetInLock && target !== document.body) ||\n        // self content\n        (targetInLock && (endTarget.contains(target) || endTarget === target)));\n    // handle epsilon around 0 (non standard zoom levels)\n    if (isDeltaPositive &&\n        ((noOverscroll && Math.abs(availableScroll) < 1) || (!noOverscroll && delta > availableScroll))) {\n        shouldCancelScroll = true;\n    }\n    else if (!isDeltaPositive &&\n        ((noOverscroll && Math.abs(availableScrollTop) < 1) || (!noOverscroll && -delta > availableScrollTop))) {\n        shouldCancelScroll = true;\n    }\n    return shouldCancelScroll;\n};\n","import { __spreadArray } from \"tslib\";\nimport * as React from 'react';\nimport { RemoveScrollBar } from 'react-remove-scroll-bar';\nimport { styleSingleton } from 'react-style-singleton';\nimport { nonPassive } from './aggresiveCapture';\nimport { handleScroll, locationCouldBeScrolled } from './handleScroll';\nexport var getTouchXY = function (event) {\n    return 'changedTouches' in event ? [event.changedTouches[0].clientX, event.changedTouches[0].clientY] : [0, 0];\n};\nexport var getDeltaXY = function (event) { return [event.deltaX, event.deltaY]; };\nvar extractRef = function (ref) {\n    return ref && 'current' in ref ? ref.current : ref;\n};\nvar deltaCompare = function (x, y) { return x[0] === y[0] && x[1] === y[1]; };\nvar generateStyle = function (id) { return \"\\n  .block-interactivity-\".concat(id, \" {pointer-events: none;}\\n  .allow-interactivity-\").concat(id, \" {pointer-events: all;}\\n\"); };\nvar idCounter = 0;\nvar lockStack = [];\nexport function RemoveScrollSideCar(props) {\n    var shouldPreventQueue = React.useRef([]);\n    var touchStartRef = React.useRef([0, 0]);\n    var activeAxis = React.useRef();\n    var id = React.useState(idCounter++)[0];\n    var Style = React.useState(styleSingleton)[0];\n    var lastProps = React.useRef(props);\n    React.useEffect(function () {\n        lastProps.current = props;\n    }, [props]);\n    React.useEffect(function () {\n        if (props.inert) {\n            document.body.classList.add(\"block-interactivity-\".concat(id));\n            var allow_1 = __spreadArray([props.lockRef.current], (props.shards || []).map(extractRef), true).filter(Boolean);\n            allow_1.forEach(function (el) { return el.classList.add(\"allow-interactivity-\".concat(id)); });\n            return function () {\n                document.body.classList.remove(\"block-interactivity-\".concat(id));\n                allow_1.forEach(function (el) { return el.classList.remove(\"allow-interactivity-\".concat(id)); });\n            };\n        }\n        return;\n    }, [props.inert, props.lockRef.current, props.shards]);\n    var shouldCancelEvent = React.useCallback(function (event, parent) {\n        if ('touches' in event && event.touches.length === 2) {\n            return !lastProps.current.allowPinchZoom;\n        }\n        var touch = getTouchXY(event);\n        var touchStart = touchStartRef.current;\n        var deltaX = 'deltaX' in event ? event.deltaX : touchStart[0] - touch[0];\n        var deltaY = 'deltaY' in event ? event.deltaY : touchStart[1] - touch[1];\n        var currentAxis;\n        var target = event.target;\n        var moveDirection = Math.abs(deltaX) > Math.abs(deltaY) ? 'h' : 'v';\n        // allow horizontal touch move on Range inputs. They will not cause any scroll\n        if ('touches' in event && moveDirection === 'h' && target.type === 'range') {\n            return false;\n        }\n        var canBeScrolledInMainDirection = locationCouldBeScrolled(moveDirection, target);\n        if (!canBeScrolledInMainDirection) {\n            return true;\n        }\n        if (canBeScrolledInMainDirection) {\n            currentAxis = moveDirection;\n        }\n        else {\n            currentAxis = moveDirection === 'v' ? 'h' : 'v';\n            canBeScrolledInMainDirection = locationCouldBeScrolled(moveDirection, target);\n            // other axis might be not scrollable\n        }\n        if (!canBeScrolledInMainDirection) {\n            return false;\n        }\n        if (!activeAxis.current && 'changedTouches' in event && (deltaX || deltaY)) {\n            activeAxis.current = currentAxis;\n        }\n        if (!currentAxis) {\n            return true;\n        }\n        var cancelingAxis = activeAxis.current || currentAxis;\n        return handleScroll(cancelingAxis, parent, event, cancelingAxis === 'h' ? deltaX : deltaY, true);\n    }, []);\n    var shouldPrevent = React.useCallback(function (_event) {\n        var event = _event;\n        if (!lockStack.length || lockStack[lockStack.length - 1] !== Style) {\n            // not the last active\n            return;\n        }\n        var delta = 'deltaY' in event ? getDeltaXY(event) : getTouchXY(event);\n        var sourceEvent = shouldPreventQueue.current.filter(function (e) { return e.name === event.type && (e.target === event.target || event.target === e.shadowParent) && deltaCompare(e.delta, delta); })[0];\n        // self event, and should be canceled\n        if (sourceEvent && sourceEvent.should) {\n            if (event.cancelable) {\n                event.preventDefault();\n            }\n            return;\n        }\n        // outside or shard event\n        if (!sourceEvent) {\n            var shardNodes = (lastProps.current.shards || [])\n                .map(extractRef)\n                .filter(Boolean)\n                .filter(function (node) { return node.contains(event.target); });\n            var shouldStop = shardNodes.length > 0 ? shouldCancelEvent(event, shardNodes[0]) : !lastProps.current.noIsolation;\n            if (shouldStop) {\n                if (event.cancelable) {\n                    event.preventDefault();\n                }\n            }\n        }\n    }, []);\n    var shouldCancel = React.useCallback(function (name, delta, target, should) {\n        var event = { name: name, delta: delta, target: target, should: should, shadowParent: getOutermostShadowParent(target) };\n        shouldPreventQueue.current.push(event);\n        setTimeout(function () {\n            shouldPreventQueue.current = shouldPreventQueue.current.filter(function (e) { return e !== event; });\n        }, 1);\n    }, []);\n    var scrollTouchStart = React.useCallback(function (event) {\n        touchStartRef.current = getTouchXY(event);\n        activeAxis.current = undefined;\n    }, []);\n    var scrollWheel = React.useCallback(function (event) {\n        shouldCancel(event.type, getDeltaXY(event), event.target, shouldCancelEvent(event, props.lockRef.current));\n    }, []);\n    var scrollTouchMove = React.useCallback(function (event) {\n        shouldCancel(event.type, getTouchXY(event), event.target, shouldCancelEvent(event, props.lockRef.current));\n    }, []);\n    React.useEffect(function () {\n        lockStack.push(Style);\n        props.setCallbacks({\n            onScrollCapture: scrollWheel,\n            onWheelCapture: scrollWheel,\n            onTouchMoveCapture: scrollTouchMove,\n        });\n        document.addEventListener('wheel', shouldPrevent, nonPassive);\n        document.addEventListener('touchmove', shouldPrevent, nonPassive);\n        document.addEventListener('touchstart', scrollTouchStart, nonPassive);\n        return function () {\n            lockStack = lockStack.filter(function (inst) { return inst !== Style; });\n            document.removeEventListener('wheel', shouldPrevent, nonPassive);\n            document.removeEventListener('touchmove', shouldPrevent, nonPassive);\n            document.removeEventListener('touchstart', scrollTouchStart, nonPassive);\n        };\n    }, []);\n    var removeScrollBar = props.removeScrollBar, inert = props.inert;\n    return (React.createElement(React.Fragment, null,\n        inert ? React.createElement(Style, { styles: generateStyle(id) }) : null,\n        removeScrollBar ? React.createElement(RemoveScrollBar, { gapMode: props.gapMode }) : null));\n}\nfunction getOutermostShadowParent(node) {\n    var shadowParent = null;\n    while (node !== null) {\n        if (node instanceof ShadowRoot) {\n            shadowParent = node.host;\n            node = node.host;\n        }\n        node = node.parentNode;\n    }\n    return shadowParent;\n}\n","import { exportSidecar } from 'use-sidecar';\nimport { RemoveScrollSideCar } from './SideEffect';\nimport { effectCar } from './medium';\nexport default exportSidecar(effectCar, RemoveScrollSideCar);\n","import { __assign } from \"tslib\";\nimport * as React from 'react';\nimport { RemoveScroll } from './UI';\nimport SideCar from './sidecar';\nvar ReactRemoveScroll = React.forwardRef(function (props, ref) { return (React.createElement(RemoveScroll, __assign({}, props, { ref: ref, sideCar: SideCar }))); });\nReactRemoveScroll.classNames = RemoveScroll.classNames;\nexport default ReactRemoveScroll;\n","import * as React from 'react';\nimport { composeEventHandlers } from '@radix-ui/primitive';\nimport { useComposedRefs } from '@radix-ui/react-compose-refs';\nimport { createContext, createContextScope } from '@radix-ui/react-context';\nimport { useId } from '@radix-ui/react-id';\nimport { useControllableState } from '@radix-ui/react-use-controllable-state';\nimport { DismissableLayer } from '@radix-ui/react-dismissable-layer';\nimport { FocusScope } from '@radix-ui/react-focus-scope';\nimport { Portal as PortalPrimitive } from '@radix-ui/react-portal';\nimport { Presence } from '@radix-ui/react-presence';\nimport { Primitive } from '@radix-ui/react-primitive';\nimport { useFocusGuards } from '@radix-ui/react-focus-guards';\nimport { RemoveScroll } from 'react-remove-scroll';\nimport { hideOthers } from 'aria-hidden';\nimport { Slot } from '@radix-ui/react-slot';\n\nimport type { Scope } from '@radix-ui/react-context';\n\n/* -------------------------------------------------------------------------------------------------\n * Dialog\n * -----------------------------------------------------------------------------------------------*/\n\nconst DIALOG_NAME = 'Dialog';\n\ntype ScopedProps<P> = P & { __scopeDialog?: Scope };\nconst [createDialogContext, createDialogScope] = createContextScope(DIALOG_NAME);\n\ntype DialogContextValue = {\n  triggerRef: React.RefObject<HTMLButtonElement>;\n  contentRef: React.RefObject<DialogContentElement>;\n  contentId: string;\n  titleId: string;\n  descriptionId: string;\n  open: boolean;\n  onOpenChange(open: boolean): void;\n  onOpenToggle(): void;\n  modal: boolean;\n};\n\nconst [DialogProvider, useDialogContext] = createDialogContext<DialogContextValue>(DIALOG_NAME);\n\ninterface DialogProps {\n  children?: React.ReactNode;\n  open?: boolean;\n  defaultOpen?: boolean;\n  onOpenChange?(open: boolean): void;\n  modal?: boolean;\n}\n\nconst Dialog: React.FC<DialogProps> = (props: ScopedProps<DialogProps>) => {\n  const {\n    __scopeDialog,\n    children,\n    open: openProp,\n    defaultOpen,\n    onOpenChange,\n    modal = true,\n  } = props;\n  const triggerRef = React.useRef<HTMLButtonElement>(null);\n  const contentRef = React.useRef<DialogContentElement>(null);\n  const [open = false, setOpen] = useControllableState({\n    prop: openProp,\n    defaultProp: defaultOpen,\n    onChange: onOpenChange,\n  });\n\n  return (\n    <DialogProvider\n      scope={__scopeDialog}\n      triggerRef={triggerRef}\n      contentRef={contentRef}\n      contentId={useId()}\n      titleId={useId()}\n      descriptionId={useId()}\n      open={open}\n      onOpenChange={setOpen}\n      onOpenToggle={React.useCallback(() => setOpen((prevOpen) => !prevOpen), [setOpen])}\n      modal={modal}\n    >\n      {children}\n    </DialogProvider>\n  );\n};\n\nDialog.displayName = DIALOG_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * DialogTrigger\n * -----------------------------------------------------------------------------------------------*/\n\nconst TRIGGER_NAME = 'DialogTrigger';\n\ntype DialogTriggerElement = React.ElementRef<typeof Primitive.button>;\ntype PrimitiveButtonProps = React.ComponentPropsWithoutRef<typeof Primitive.button>;\ninterface DialogTriggerProps extends PrimitiveButtonProps {}\n\nconst DialogTrigger = React.forwardRef<DialogTriggerElement, DialogTriggerProps>(\n  (props: ScopedProps<DialogTriggerProps>, forwardedRef) => {\n    const { __scopeDialog, ...triggerProps } = props;\n    const context = useDialogContext(TRIGGER_NAME, __scopeDialog);\n    const composedTriggerRef = useComposedRefs(forwardedRef, context.triggerRef);\n    return (\n      <Primitive.button\n        type=\"button\"\n        aria-haspopup=\"dialog\"\n        aria-expanded={context.open}\n        aria-controls={context.contentId}\n        data-state={getState(context.open)}\n        {...triggerProps}\n        ref={composedTriggerRef}\n        onClick={composeEventHandlers(props.onClick, context.onOpenToggle)}\n      />\n    );\n  }\n);\n\nDialogTrigger.displayName = TRIGGER_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * DialogPortal\n * -----------------------------------------------------------------------------------------------*/\n\nconst PORTAL_NAME = 'DialogPortal';\n\ntype PortalContextValue = { forceMount?: true };\nconst [PortalProvider, usePortalContext] = createDialogContext<PortalContextValue>(PORTAL_NAME, {\n  forceMount: undefined,\n});\n\ntype PortalProps = React.ComponentPropsWithoutRef<typeof PortalPrimitive>;\ninterface DialogPortalProps {\n  children?: React.ReactNode;\n  /**\n   * Specify a container element to portal the content into.\n   */\n  container?: PortalProps['container'];\n  /**\n   * Used to force mounting when more control is needed. Useful when\n   * controlling animation with React animation libraries.\n   */\n  forceMount?: true;\n}\n\nconst DialogPortal: React.FC<DialogPortalProps> = (props: ScopedProps<DialogPortalProps>) => {\n  const { __scopeDialog, forceMount, children, container } = props;\n  const context = useDialogContext(PORTAL_NAME, __scopeDialog);\n  return (\n    <PortalProvider scope={__scopeDialog} forceMount={forceMount}>\n      {React.Children.map(children, (child) => (\n        <Presence present={forceMount || context.open}>\n          <PortalPrimitive asChild container={container}>\n            {child}\n          </PortalPrimitive>\n        </Presence>\n      ))}\n    </PortalProvider>\n  );\n};\n\nDialogPortal.displayName = PORTAL_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * DialogOverlay\n * -----------------------------------------------------------------------------------------------*/\n\nconst OVERLAY_NAME = 'DialogOverlay';\n\ntype DialogOverlayElement = DialogOverlayImplElement;\ninterface DialogOverlayProps extends DialogOverlayImplProps {\n  /**\n   * Used to force mounting when more control is needed. Useful when\n   * controlling animation with React animation libraries.\n   */\n  forceMount?: true;\n}\n\nconst DialogOverlay = React.forwardRef<DialogOverlayElement, DialogOverlayProps>(\n  (props: ScopedProps<DialogOverlayProps>, forwardedRef) => {\n    const portalContext = usePortalContext(OVERLAY_NAME, props.__scopeDialog);\n    const { forceMount = portalContext.forceMount, ...overlayProps } = props;\n    const context = useDialogContext(OVERLAY_NAME, props.__scopeDialog);\n    return context.modal ? (\n      <Presence present={forceMount || context.open}>\n        <DialogOverlayImpl {...overlayProps} ref={forwardedRef} />\n      </Presence>\n    ) : null;\n  }\n);\n\nDialogOverlay.displayName = OVERLAY_NAME;\n\ntype DialogOverlayImplElement = React.ElementRef<typeof Primitive.div>;\ntype PrimitiveDivProps = React.ComponentPropsWithoutRef<typeof Primitive.div>;\ninterface DialogOverlayImplProps extends PrimitiveDivProps {}\n\nconst DialogOverlayImpl = React.forwardRef<DialogOverlayImplElement, DialogOverlayImplProps>(\n  (props: ScopedProps<DialogOverlayImplProps>, forwardedRef) => {\n    const { __scopeDialog, ...overlayProps } = props;\n    const context = useDialogContext(OVERLAY_NAME, __scopeDialog);\n    return (\n      // Make sure `Content` is scrollable even when it doesn't live inside `RemoveScroll`\n      // ie. when `Overlay` and `Content` are siblings\n      <RemoveScroll as={Slot} allowPinchZoom shards={[context.contentRef]}>\n        <Primitive.div\n          data-state={getState(context.open)}\n          {...overlayProps}\n          ref={forwardedRef}\n          // We re-enable pointer-events prevented by `Dialog.Content` to allow scrolling the overlay.\n          style={{ pointerEvents: 'auto', ...overlayProps.style }}\n        />\n      </RemoveScroll>\n    );\n  }\n);\n\n/* -------------------------------------------------------------------------------------------------\n * DialogContent\n * -----------------------------------------------------------------------------------------------*/\n\nconst CONTENT_NAME = 'DialogContent';\n\ntype DialogContentElement = DialogContentTypeElement;\ninterface DialogContentProps extends DialogContentTypeProps {\n  /**\n   * Used to force mounting when more control is needed. Useful when\n   * controlling animation with React animation libraries.\n   */\n  forceMount?: true;\n}\n\nconst DialogContent = React.forwardRef<DialogContentElement, DialogContentProps>(\n  (props: ScopedProps<DialogContentProps>, forwardedRef) => {\n    const portalContext = usePortalContext(CONTENT_NAME, props.__scopeDialog);\n    const { forceMount = portalContext.forceMount, ...contentProps } = props;\n    const context = useDialogContext(CONTENT_NAME, props.__scopeDialog);\n    return (\n      <Presence present={forceMount || context.open}>\n        {context.modal ? (\n          <DialogContentModal {...contentProps} ref={forwardedRef} />\n        ) : (\n          <DialogContentNonModal {...contentProps} ref={forwardedRef} />\n        )}\n      </Presence>\n    );\n  }\n);\n\nDialogContent.displayName = CONTENT_NAME;\n\n/* -----------------------------------------------------------------------------------------------*/\n\ntype DialogContentTypeElement = DialogContentImplElement;\ninterface DialogContentTypeProps\n  extends Omit<DialogContentImplProps, 'trapFocus' | 'disableOutsidePointerEvents'> {}\n\nconst DialogContentModal = React.forwardRef<DialogContentTypeElement, DialogContentTypeProps>(\n  (props: ScopedProps<DialogContentTypeProps>, forwardedRef) => {\n    const context = useDialogContext(CONTENT_NAME, props.__scopeDialog);\n    const contentRef = React.useRef<HTMLDivElement>(null);\n    const composedRefs = useComposedRefs(forwardedRef, context.contentRef, contentRef);\n\n    // aria-hide everything except the content (better supported equivalent to setting aria-modal)\n    React.useEffect(() => {\n      const content = contentRef.current;\n      if (content) return hideOthers(content);\n    }, []);\n\n    return (\n      <DialogContentImpl\n        {...props}\n        ref={composedRefs}\n        // we make sure focus isn't trapped once `DialogContent` has been closed\n        // (closed !== unmounted when animating out)\n        trapFocus={context.open}\n        disableOutsidePointerEvents\n        onCloseAutoFocus={composeEventHandlers(props.onCloseAutoFocus, (event) => {\n          event.preventDefault();\n          context.triggerRef.current?.focus();\n        })}\n        onPointerDownOutside={composeEventHandlers(props.onPointerDownOutside, (event) => {\n          const originalEvent = event.detail.originalEvent;\n          const ctrlLeftClick = originalEvent.button === 0 && originalEvent.ctrlKey === true;\n          const isRightClick = originalEvent.button === 2 || ctrlLeftClick;\n\n          // If the event is a right-click, we shouldn't close because\n          // it is effectively as if we right-clicked the `Overlay`.\n          if (isRightClick) event.preventDefault();\n        })}\n        // When focus is trapped, a `focusout` event may still happen.\n        // We make sure we don't trigger our `onDismiss` in such case.\n        onFocusOutside={composeEventHandlers(props.onFocusOutside, (event) =>\n          event.preventDefault()\n        )}\n      />\n    );\n  }\n);\n\n/* -----------------------------------------------------------------------------------------------*/\n\nconst DialogContentNonModal = React.forwardRef<DialogContentTypeElement, DialogContentTypeProps>(\n  (props: ScopedProps<DialogContentTypeProps>, forwardedRef) => {\n    const context = useDialogContext(CONTENT_NAME, props.__scopeDialog);\n    const hasInteractedOutsideRef = React.useRef(false);\n    const hasPointerDownOutsideRef = React.useRef(false);\n\n    return (\n      <DialogContentImpl\n        {...props}\n        ref={forwardedRef}\n        trapFocus={false}\n        disableOutsidePointerEvents={false}\n        onCloseAutoFocus={(event) => {\n          props.onCloseAutoFocus?.(event);\n\n          if (!event.defaultPrevented) {\n            if (!hasInteractedOutsideRef.current) context.triggerRef.current?.focus();\n            // Always prevent auto focus because we either focus manually or want user agent focus\n            event.preventDefault();\n          }\n\n          hasInteractedOutsideRef.current = false;\n          hasPointerDownOutsideRef.current = false;\n        }}\n        onInteractOutside={(event) => {\n          props.onInteractOutside?.(event);\n\n          if (!event.defaultPrevented) {\n            hasInteractedOutsideRef.current = true;\n            if (event.detail.originalEvent.type === 'pointerdown') {\n              hasPointerDownOutsideRef.current = true;\n            }\n          }\n\n          // Prevent dismissing when clicking the trigger.\n          // As the trigger is already setup to close, without doing so would\n          // cause it to close and immediately open.\n          const target = event.target as HTMLElement;\n          const targetIsTrigger = context.triggerRef.current?.contains(target);\n          if (targetIsTrigger) event.preventDefault();\n\n          // On Safari if the trigger is inside a container with tabIndex={0}, when clicked\n          // we will get the pointer down outside event on the trigger, but then a subsequent\n          // focus outside event on the container, we ignore any focus outside event when we've\n          // already had a pointer down outside event.\n          if (event.detail.originalEvent.type === 'focusin' && hasPointerDownOutsideRef.current) {\n            event.preventDefault();\n          }\n        }}\n      />\n    );\n  }\n);\n\n/* -----------------------------------------------------------------------------------------------*/\n\ntype DialogContentImplElement = React.ElementRef<typeof DismissableLayer>;\ntype DismissableLayerProps = React.ComponentPropsWithoutRef<typeof DismissableLayer>;\ntype FocusScopeProps = React.ComponentPropsWithoutRef<typeof FocusScope>;\ninterface DialogContentImplProps extends Omit<DismissableLayerProps, 'onDismiss'> {\n  /**\n   * When `true`, focus cannot escape the `Content` via keyboard,\n   * pointer, or a programmatic focus.\n   * @defaultValue false\n   */\n  trapFocus?: FocusScopeProps['trapped'];\n\n  /**\n   * Event handler called when auto-focusing on open.\n   * Can be prevented.\n   */\n  onOpenAutoFocus?: FocusScopeProps['onMountAutoFocus'];\n\n  /**\n   * Event handler called when auto-focusing on close.\n   * Can be prevented.\n   */\n  onCloseAutoFocus?: FocusScopeProps['onUnmountAutoFocus'];\n}\n\nconst DialogContentImpl = React.forwardRef<DialogContentImplElement, DialogContentImplProps>(\n  (props: ScopedProps<DialogContentImplProps>, forwardedRef) => {\n    const { __scopeDialog, trapFocus, onOpenAutoFocus, onCloseAutoFocus, ...contentProps } = props;\n    const context = useDialogContext(CONTENT_NAME, __scopeDialog);\n    const contentRef = React.useRef<HTMLDivElement>(null);\n    const composedRefs = useComposedRefs(forwardedRef, contentRef);\n\n    // Make sure the whole tree has focus guards as our `Dialog` will be\n    // the last element in the DOM (beacuse of the `Portal`)\n    useFocusGuards();\n\n    return (\n      <>\n        <FocusScope\n          asChild\n          loop\n          trapped={trapFocus}\n          onMountAutoFocus={onOpenAutoFocus}\n          onUnmountAutoFocus={onCloseAutoFocus}\n        >\n          <DismissableLayer\n            role=\"dialog\"\n            id={context.contentId}\n            aria-describedby={context.descriptionId}\n            aria-labelledby={context.titleId}\n            data-state={getState(context.open)}\n            {...contentProps}\n            ref={composedRefs}\n            onDismiss={() => context.onOpenChange(false)}\n          />\n        </FocusScope>\n        {process.env.NODE_ENV !== 'production' && (\n          <>\n            <TitleWarning titleId={context.titleId} />\n            <DescriptionWarning contentRef={contentRef} descriptionId={context.descriptionId} />\n          </>\n        )}\n      </>\n    );\n  }\n);\n\n/* -------------------------------------------------------------------------------------------------\n * DialogTitle\n * -----------------------------------------------------------------------------------------------*/\n\nconst TITLE_NAME = 'DialogTitle';\n\ntype DialogTitleElement = React.ElementRef<typeof Primitive.h2>;\ntype PrimitiveHeading2Props = React.ComponentPropsWithoutRef<typeof Primitive.h2>;\ninterface DialogTitleProps extends PrimitiveHeading2Props {}\n\nconst DialogTitle = React.forwardRef<DialogTitleElement, DialogTitleProps>(\n  (props: ScopedProps<DialogTitleProps>, forwardedRef) => {\n    const { __scopeDialog, ...titleProps } = props;\n    const context = useDialogContext(TITLE_NAME, __scopeDialog);\n    return <Primitive.h2 id={context.titleId} {...titleProps} ref={forwardedRef} />;\n  }\n);\n\nDialogTitle.displayName = TITLE_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * DialogDescription\n * -----------------------------------------------------------------------------------------------*/\n\nconst DESCRIPTION_NAME = 'DialogDescription';\n\ntype DialogDescriptionElement = React.ElementRef<typeof Primitive.p>;\ntype PrimitiveParagraphProps = React.ComponentPropsWithoutRef<typeof Primitive.p>;\ninterface DialogDescriptionProps extends PrimitiveParagraphProps {}\n\nconst DialogDescription = React.forwardRef<DialogDescriptionElement, DialogDescriptionProps>(\n  (props: ScopedProps<DialogDescriptionProps>, forwardedRef) => {\n    const { __scopeDialog, ...descriptionProps } = props;\n    const context = useDialogContext(DESCRIPTION_NAME, __scopeDialog);\n    return <Primitive.p id={context.descriptionId} {...descriptionProps} ref={forwardedRef} />;\n  }\n);\n\nDialogDescription.displayName = DESCRIPTION_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * DialogClose\n * -----------------------------------------------------------------------------------------------*/\n\nconst CLOSE_NAME = 'DialogClose';\n\ntype DialogCloseElement = React.ElementRef<typeof Primitive.button>;\ninterface DialogCloseProps extends PrimitiveButtonProps {}\n\nconst DialogClose = React.forwardRef<DialogCloseElement, DialogCloseProps>(\n  (props: ScopedProps<DialogCloseProps>, forwardedRef) => {\n    const { __scopeDialog, ...closeProps } = props;\n    const context = useDialogContext(CLOSE_NAME, __scopeDialog);\n    return (\n      <Primitive.button\n        type=\"button\"\n        {...closeProps}\n        ref={forwardedRef}\n        onClick={composeEventHandlers(props.onClick, () => context.onOpenChange(false))}\n      />\n    );\n  }\n);\n\nDialogClose.displayName = CLOSE_NAME;\n\n/* -----------------------------------------------------------------------------------------------*/\n\nfunction getState(open: boolean) {\n  return open ? 'open' : 'closed';\n}\n\nconst TITLE_WARNING_NAME = 'DialogTitleWarning';\n\nconst [WarningProvider, useWarningContext] = createContext(TITLE_WARNING_NAME, {\n  contentName: CONTENT_NAME,\n  titleName: TITLE_NAME,\n  docsSlug: 'dialog',\n});\n\ntype TitleWarningProps = { titleId?: string };\n\nconst TitleWarning: React.FC<TitleWarningProps> = ({ titleId }) => {\n  const titleWarningContext = useWarningContext(TITLE_WARNING_NAME);\n\n  const MESSAGE = `\\`${titleWarningContext.contentName}\\` requires a \\`${titleWarningContext.titleName}\\` for the component to be accessible for screen reader users.\n\nIf you want to hide the \\`${titleWarningContext.titleName}\\`, you can wrap it with our VisuallyHidden component.\n\nFor more information, see https://radix-ui.com/primitives/docs/components/${titleWarningContext.docsSlug}`;\n\n  React.useEffect(() => {\n    if (titleId) {\n      const hasTitle = document.getElementById(titleId);\n      if (!hasTitle) console.error(MESSAGE);\n    }\n  }, [MESSAGE, titleId]);\n\n  return null;\n};\n\nconst DESCRIPTION_WARNING_NAME = 'DialogDescriptionWarning';\n\ntype DescriptionWarningProps = {\n  contentRef: React.RefObject<DialogContentElement>;\n  descriptionId?: string;\n};\n\nconst DescriptionWarning: React.FC<DescriptionWarningProps> = ({ contentRef, descriptionId }) => {\n  const descriptionWarningContext = useWarningContext(DESCRIPTION_WARNING_NAME);\n  const MESSAGE = `Warning: Missing \\`Description\\` or \\`aria-describedby={undefined}\\` for {${descriptionWarningContext.contentName}}.`;\n\n  React.useEffect(() => {\n    const describedById = contentRef.current?.getAttribute('aria-describedby');\n    // if we have an id and the user hasn't set aria-describedby={undefined}\n    if (descriptionId && describedById) {\n      const hasDescription = document.getElementById(descriptionId);\n      if (!hasDescription) console.warn(MESSAGE);\n    }\n  }, [MESSAGE, contentRef, descriptionId]);\n\n  return null;\n};\n\nconst Root = Dialog;\nconst Trigger = DialogTrigger;\nconst Portal = DialogPortal;\nconst Overlay = DialogOverlay;\nconst Content = DialogContent;\nconst Title = DialogTitle;\nconst Description = DialogDescription;\nconst Close = DialogClose;\n\nexport {\n  createDialogScope,\n  //\n  Dialog,\n  DialogTrigger,\n  DialogPortal,\n  DialogOverlay,\n  DialogContent,\n  DialogTitle,\n  DialogDescription,\n  DialogClose,\n  //\n  Root,\n  Trigger,\n  Portal,\n  Overlay,\n  Content,\n  Title,\n  Description,\n  Close,\n  //\n  WarningProvider,\n};\nexport type {\n  DialogProps,\n  DialogTriggerProps,\n  DialogPortalProps,\n  DialogOverlayProps,\n  DialogContentProps,\n  DialogTitleProps,\n  DialogDescriptionProps,\n  DialogCloseProps,\n};\n"],"names":["originalBodyPointerEvents","composeEventHandlers","originalEventHandler","ourEventHandler","checkForDefaultPrevented","event","defaultPrevented","composeRefs","refs","forEach","ref","node","current","useComposedRefs","react","useCallback","useLayoutEffect2","Boolean","document","useLayoutEffect","useReactId","react_namespaceObject","toString","count","useId","deterministicId","id","setId","useState","reactId","String","useCallbackRef","callback","callbackRef","useRef","useEffect","useMemo","args","Slot","forwardRef","props","forwardedRef","children","slotProps","childrenArray","Children","toArray","slottable","find","isSlottable","newElement","newChildren","map","child","only","isValidElement","react_jsx_runtime","jsx","SlotClone","cloneElement","displayName","childrenRef","getElementRef","element","getter","Object","getOwnPropertyDescriptor","get","mayWarn","isReactWarning","mergeProps","childProps","overrideProps","propName","slotPropValue","childPropValue","test","filter","join","Slottable","Fragment","type","Primitive","NODES","reduce","primitive","Node","asChild","primitiveProps","Comp","window","Symbol","for","CONTEXT_UPDATE","DismissableLayerContext","React","layers","Set","layersWithOutsidePointerEventsDisabled","branches","DismissableLayer","disableOutsidePointerEvents","onEscapeKeyDown","onPointerDownOutside","onFocusOutside","onInteractOutside","onDismiss","layerProps","context","setNode","ownerDocument","globalThis","force","composedRefs","Array","from","highestLayerWithOutsidePointerEventsDisabled","slice","highestLayerWithOutsidePointerEventsDisabledIndex","indexOf","index","isBodyPointerEventsDisabled","size","isPointerEventsEnabled","pointerDownOutside","usePointerDownOutside","handlePointerDownOutside","isPointerInsideReactTreeRef","handleClickRef","handlePointerDown","target","handleAndDispatchPointerDownOutsideEvent","handleAndDispatchCustomEvent","eventDetail","discrete","originalEvent","pointerType","removeEventListener","addEventListener","once","timerId","setTimeout","clearTimeout","onPointerDownCapture","isPointerDownOnBranch","some","branch","contains","focusOutside","useFocusOutside","handleFocusOutside","isFocusInsideReactTreeRef","handleFocus","onFocusCapture","onBlurCapture","useEscapeKeydown","onEscapeKeyDownProp","handleKeyDown","key","capture","preventDefault","body","style","pointerEvents","add","dispatchUpdate","delete","handleUpdate","div","CustomEvent","dispatchEvent","name","handler","detail","bubbles","cancelable","react_dom","flushSync","DismissableLayerBranch","AUTOFOCUS_ON_MOUNT","AUTOFOCUS_ON_UNMOUNT","EVENT_OPTIONS","FocusScope","loop","trapped","onMountAutoFocus","onMountAutoFocusProp","onUnmountAutoFocus","onUnmountAutoFocusProp","scopeProps","container","setContainer","lastFocusedElementRef","focusScope","paused","pause","resume","handleFocusIn","focus","select","handleFocusOut","relatedTarget","mutationObserver","MutationObserver","mutations","focusedElement","activeElement","mutation","removedNodes","length","observe","childList","subtree","disconnect","focusScopesStack","previouslyFocusedElement","mountEvent","focusFirst","candidates","candidate","items","item","tagName","unmountEvent","remove","isTabKey","altKey","ctrlKey","metaKey","currentTarget","first","last","getTabbableEdges","getTabbableCandidates","findVisible","reverse","shiftKey","tabIndex","onKeyDown","nodes","walker","createTreeWalker","NodeFilter","SHOW_ELEMENT","acceptNode","isHiddenInput","disabled","hidden","FILTER_SKIP","FILTER_ACCEPT","nextNode","push","currentNode","elements","isHidden","upTo","getComputedStyle","visibility","display","parentElement","preventScroll","HTMLInputElement","createFocusScopesStack","stack","activeFocusScope","arrayRemove","unshift","array","updatedArray","splice","Portal","containerProp","portalProps","mounted","setMounted","ReactDOM","Presence","present","presence","usePresence","initialState","machine","React2","stylesRef","prevPresentRef","prevAnimationNameRef","state","send","UNMOUNT","ANIMATION_OUT","unmountSuspended","MOUNT","ANIMATION_END","unmounted","nextState","currentAnimationName","getAnimationName","styles","wasPresent","prevAnimationName","handleAnimationEnd","isCurrentAnimation","includes","animationName","handleAnimationStart","isPresent","forceMount","createFocusGuard","createElement","setAttribute","cssText","effectCar","medium","_","nothing","RemoveScroll","parentRef","_a","onScrollCapture","onWheelCapture","onTouchMoveCapture","callbacks","setCallbacks","forwardProps","className","removeScrollBar","enabled","shards","sideCar","noIsolation","inert","allowPinchZoom","_b","as","gapMode","rest","tslib_es6","_T","containerRef","useMergeRef","q","containerProps","pi","lockRef","defaultProps","classNames","fullWidth","constants","zi","zeroRight","pF","passiveSupported","options","defineProperty","err","nonPassive","passive","elementCanBeScrolled","overflow","overflowY","overflowX","locationCouldBeScrolled","axis","ShadowRoot","host","elementCouldBeScrolled","getScrollVariables","s","parentNode","scrollTop","scrollHeight","clientHeight","scrollLeft","scrollWidth","clientWidth","handleScroll","endTarget","sourceDelta","noOverscroll","direction","directionFactor","delta","targetInLock","shouldCancelScroll","isDeltaPositive","availableScroll","availableScrollTop","position","elementScroll","scroll_1","Math","abs","getTouchXY","changedTouches","clientX","clientY","getDeltaXY","deltaX","deltaY","extractRef","idCounter","lockStack","sidecar","es2015_exports","L","shouldPreventQueue","touchStartRef","activeAxis","Style","dist_es2015","Ws","lastProps","classList","concat","allow_1","ev","el","shouldCancelEvent","parent","touches","currentAxis","touch","touchStart","moveDirection","canBeScrolledInMainDirection","cancelingAxis","shouldPrevent","_event","sourceEvent","e","x","shadowParent","y","should","shardNodes","shouldCancel","getOutermostShadowParent","scrollTouchStart","undefined","scrollWheel","scrollTouchMove","inst","es2015","jp","ReactRemoveScroll","DIALOG_NAME","createDialogContext","createDialogScope","createContextScope","scopeName","createContextScopeDeps","defaultContexts","createScope","scopeContexts","createContext","defaultContext","scope","contexts","rootComponentName","BaseContext","Provider","Context","value","values","consumerName","useContext","composeContextScopes","scopes","baseScope","scopeHooks","useScope","createScope2","overrideScopes","nextScopes","nextScopes2","currentScope","DialogProvider","useDialogContext","Dialog","__scopeDialog","open","openProp","defaultOpen","onOpenChange","modal","triggerRef","contentRef","setOpen","useControllableState","prop","defaultProp","onChange","uncontrolledProp","setUncontrolledProp","useUncontrolledState","uncontrolledState","prevValueRef","handleChange","isControlled","value2","nextValue","setter","contentId","titleId","descriptionId","onOpenToggle","prevOpen","TRIGGER_NAME","DialogTrigger","triggerProps","composedTriggerRef","button","getState","onClick","PORTAL_NAME","PortalProvider","usePortalContext","DialogPortal","PortalPrimitive","OVERLAY_NAME","DialogOverlay","portalContext","overlayProps","DialogOverlayImpl","CONTENT_NAME","DialogContent","contentProps","DialogContentModal","DialogContentNonModal","content","hideOthers","DialogContentImpl","trapFocus","onCloseAutoFocus","ctrlLeftClick","hasInteractedOutsideRef","hasPointerDownOutsideRef","onOpenAutoFocus","edgeGuards","querySelectorAll","insertAdjacentElement","jsxs","role","TitleWarning","DescriptionWarning","TITLE_NAME","DialogTitle","titleProps","h2","DESCRIPTION_NAME","DialogDescription","descriptionProps","p","CLOSE_NAME","DialogClose","closeProps","TITLE_WARNING_NAME","WarningProvider","useWarningContext","contentName","titleName","docsSlug","titleWarningContext","MESSAGE","getElementById","console","error","descriptionWarningContext","describedById","getAttribute","warn","Root","Trigger","Overlay","Content","Title","Description","Close"],"sourceRoot":""}